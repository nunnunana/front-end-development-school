@charset "uft-8"

/*@import url("common.css");*/

/*
	속성선택자
	[attr]
	[attr="value"] 속성선택자는 순서까지 일치해야만 한다.
	[attr|="value"] 하이픈(-)으로 구분되는 단어가 일치하는 것을 찾는다. [lang|="en"]
	[attr~="value"] 공백으로 구분되는 단어가 일치하는 것을 찾는다. []
	[attr*="value"] 공백, 하이프이 아니라 value앞뒤로 내용이 붙어있어도 찾는다.
*/

/* 공백으로 구분되는 단어가 일치할 때 선택 */
[class~="container"] {
	border: 1px dashed #cacaca;
}

/* 하이픈으로 구분되는 단어가 일치할 때 선택 */
/* 속성값의 앞부분만 확인 */
[lang|="GB"] {
	text-decoration: underline;
}


/* --------------------------------
	상태 디자인(State Design) 선택자
	기본상태 (Normal)
	커서가 올라간 상태 (Hover)
	커서로 누른 상태 (Active)
	Pseudo Class : 가상(유사, 의사) 클래스
 * ------------------------------ */

p {
	color: #84888a;
	margin-top: 0;
	margin-bottom: 0;
	padding: 0.88em;
}

p:hover {
	color: #232323;
	background: #f2f2f2;
}

p:active {
	background: #C75050
}

/* --------------------------------
	하이퍼링크 (<a href>)
	상태 디자인(State Design)
	Pseudo Class : 가상(유사, 의사) '클래스'
  가상 요소와는 다름
 * --------------------------------
	:link | 기본
	:visited | 방문
	:hover | 커서 올라간 상태
	:active | 커서를 누르고 있는 상태
	:focus | 키보드 포커싱 상태
 * ------------------------------ */

 /* 기본 상태 */
 a {
 	display: inline-block;
 	text-decoration: none;
 	color: #232323;
 	background: #eee;
 	font-weight: bold;
 	padding-left: 0.25em; /* 상대값으로 적용한다 */
 	padding-right:0.25em; /* 0이 없어도 0있는 것과같음 */
 	background-repeat: no-repeat;
	background-size: contain;
 }

/* 방문한 상태 : css 배경이미지는 적용되지 않는다. */ 
/* 참고 http://www.w3schools.com/cssref/sel_visited.asp */ 
a:visited {
	color: #AAB5CB;
	background-image: url("../images/sign-check.png");
	padding-left: 40px;
}

a:hover {
/*	text-decoration: underline; 하단이 움직이지 않게 어떻게? 글 행간을 넓힌다 ? */
	padding-bottom: 1px;
	border-bottom: 2px solid;
}

/* 커서로 누른상태 */
a:active {
	background: #e6e6e6;
}

/* 키보드 포커싱 상태 */
a:focus {
	/* 시각적으로 더 잘 보이도록 커스터마이징 하는 것이 좋다. */
	outline: 3px solid #FF5877;
}

/* Outline은 컨텐츠에 영향을 주지 않는다. */
a:focus:hover {
	outline-offset:10px;
}

.box {
	width: 200px;
	height: 200px;
	background: #E3E3E3;
	display: inline-block;
}

.box:hover {
	outline: 10px solid #62E3B4;
	outline-offset: -10px;
}

/* --------------------------------
	Rounded-box	
 * ------------------------------ */

.rounded-box {
	width: 200px;
	background: #eee;
}

.rounded-box *:first-child {
	background: red;
}

.rounded-box :first-child {
	background: cyan;
}

.wrapper ul:nth-child(2n-1) {
	background: yellow;
}

.wrapper > :nth-child(2n) {}

/* 특정 언어영역에 스타일을 적용하고 싶을 떄 */
/* 가상클래스의 관점에서 보면 맞아들지 않음 */

:lang(es) {
	/* 스페인어 사용 */
}

:lang(ja) {
	/* 일본어 사용 */
}

/* --------------------------------
	가상(유사, 의사) 요소
	Pseudo Element
	가상으로 요소(콘텐츠)를 만들어준다.

  과거 CSS 2/2.1  현재 CSS 3+
	:first-line  	| ::first-line
	:first-letter |	::first-letter
	:before  	    | ::before
	:after   	    | ::after

	하위 호환을 위해 과거 가상 요소를 사용할 수도 있으나 
	2개를 사용하는 것을 권장.
 * ------------------------------ */

/* 잡지 디자인 드롭캡(Dropcap) */
.dropcap-demo {
	color: #45E3DB;
}

/* dropcap을 만드는 비효율적인 방법
.dropcap span {
	font-size:300%;
	color: #ec0904;
}*/

.dropcap {
	margin: 0;
}

/* 단락의 첫 글자를 가상요소로 활용한다 CSS2 */
/*.dropcap::first-letter {
	font-size:300%;
	color: #ec0904;	
}*/

/* 단락의 첫 행를 가상요소로 활용한다 */
.dropcap::first-line {
	font-size:150%;
	color: #45E3DB;
	line-height: 1;
}

/* --------------------------------
	가상요소 (inline 요소-> block으로 바꾸어서 활용)
	::before
	::after 
 * ------------------------------ */

abbr {
	cursor: help;
}

.msg .before,
.msg::before {
	content: "Hey!";
	color: #5C56B5;
}

.msg .after,
.msg::after {
	content: "Hand Up!";
	color: #756CE3;
}

/* ::before, ::after는 first-child 혹은 last-child가 적용되지 않는다.*/


/* --------------------------------
	접근성 관점에서 링크의 주소를 출력하는 스타일
 * ------------------------------ */

/* 프린트를 할때 a요소 뒤에 컨텐츠를 링크 속성을 보여준다. */
/* 변수를 활용할 수 있다. */
@media print {
	a::after {
		content: '(' attr(href) ')';
		color: #FF8655;
	}

	abbr::after {
		content: '(' attr(title) ')'
	}
}

/* HTML <html> XML <cook>, <book> */
:root {}


/* --------------------------------
	:not(selector)
 * ------------------------------ */

/*.parent {
	background: #ff0;
}*/

.parent *:not(a):not(p) {
	background: #ff0;
}

/* --------------------------------
	사용자가 커서로 클릭 후, 텍스트 블록을
	선택할 경우 가상으로 요소를 만들어 디자인
 * ------------------------------ */

 ::selection {
 	text-shadow: 2px 2px 8px #fff;
 	background-color: #E40000;
 	color:#fff;
 }
 
::-moz-selection {
 	background-color: #E40000;
 	color:#fff;
 }
